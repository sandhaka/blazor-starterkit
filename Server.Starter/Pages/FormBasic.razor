@page "/form"

@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@implements IDisposable

<h3>FormSample</h3>
<p>Compose your vegetable box for the next week!</p>

<EditForm EditContext="_editContext" OnValidSubmit="@HandleValidSubmit" class="form-group">
    <DataAnnotationsValidator/>
    <ValidationSummary />
    
    <div class="row">
        <div class="col-4">
            <label class="form-label">
                Salad
                <InputNumber
                    class="form-control"
                    TValue="int"
                    @bind-Value="_formModel.Salad"
                    DisplayName="Salad">
                </InputNumber>
            </label>
        </div>
        <div class="col-4">
            <label class="form-label">
                Carrots
                <InputNumber
                    class="form-control"
                    TValue="int"
                    @bind-Value="_formModel.Carrots"
                    DisplayName="Carrots">
                </InputNumber>
            </label>
        </div>
        <div class="col-4">
            <label class="form-label">
                Cabbage
                <InputNumber
                    class="form-control"
                    TValue="int"
                    @bind-Value="_formModel.Cabbage"
                    DisplayName="Cabbage">
                </InputNumber>
            </label>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <label class="form-label">
                Leeks
                <InputNumber
                    class="form-control"
                    TValue="int"
                    @bind-Value="_formModel.Leek"
                    DisplayName="Leek">
                </InputNumber>
            </label>
        </div>
        <div class="col-4">
            <label class="form-label">
                Lentils
                <InputNumber
                    class="form-control"
                    TValue="int"
                    @bind-Value="_formModel.Lentils"
                    DisplayName="Lentils">
                </InputNumber>
            </label>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-12">
            <label><strong>Destination: </strong></label>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <label class="form-label">
                Recipient name
                <InputText
                    class="form-control"
                    DisplayName="Recipient name"
                    @bind-Value="_formModel.Recipient"/>
            </label>
        </div>
    </div>
    <div class="row">
        <div class="col-8">
            <label class="form-label">
                Address
                <InputText
                    class="form-control"
                    DisplayName="Street address"
                    @bind-Value="_formModel.Address"/>
            </label>
        </div>
        <div class="col-4">
            <label class="form-label">
                Number
                <InputText
                    class="form-control"
                    DisplayName="Street number"
                    @bind-Value="_formModel.StreetNumber"/>
            </label>
        </div>
        <div class="col-4">
            <label class="form-label">
                City
                <InputText
                    class="form-control"
                    DisplayName="City"
                    @bind-Value="_formModel.City"/>
            </label>
        </div>
        <div class="col-2">
            <label class="form-label">
                Cap
                <InputText
                    class="form-control"
                    DisplayName="Cap"
                    @bind-Value="_formModel.Cap"/>
            </label>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-3">
            <label class="form-label">
                Delivery day
                <InputSelect
                    TValue="string"
                    class="form-select"
                    DisplayName="Delivery day"
                    @bind-Value="_formModel.PreferredDeliveryDay">
                    <option value="@string.Empty">Select a preferred day</option>
                    <option value="Monday">Monday</option>
                    <option value="Tuesday">Tuesday</option>
                    <option value="Wednesday">Wednesday</option>
                </InputSelect>
            </label>
        </div>
        <div class="col-3">
            <label class="form-label">
                Place order
                <button class="form-control btn btn-primary" type="submit">Submit</button>
            </label>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-12">
            <code>
                @_serializedPlacedOrderData
            </code>
        </div>
    </div>
</EditForm>

@code {

    internal class VegetablesOrderBoxFormModel
    {
        public int Salad { get; set; } = 230;
        public int Carrots { get; set; } = 1100;
        public int Cabbage { get; set; } = 860;
        public int Leek { get; set; }
        public int Lentils { get; set; }
        
        [Required(ErrorMessage = "Preferred delivery day field is required")]
        public string? PreferredDeliveryDay { get; set; }
        [Required]
        [MinLength(4)]
        [MaxLength(32)]
        public string? Recipient { get; set; }
        [Required]
        [MinLength(6)]
        [MaxLength(32)]
        public string? Address { get; set; }
        [Required]
        [MinLength(1)]
        [MaxLength(3)]
        public string? StreetNumber { get; set; }
        [Required]
        [MinLength(2)]
        [MaxLength(16)]
        public string? City { get; set; }
        [Required]
        [StringLength(5)]
        public string? Cap { get; set; }
    }

    private readonly VegetablesOrderBoxFormModel _formModel = new();
    private EditContext? _editContext;
    private string _serializedPlacedOrderData = string.Empty;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(_formModel);
        _editContext.OnValidationRequested += HandleValidationRequested;
    }

    private void HandleValidationRequested(object? sender, ValidationRequestedEventArgs e)
    {
        _serializedPlacedOrderData = string.Empty;
    }

    private void HandleValidSubmit()
    {
        _serializedPlacedOrderData = JsonSerializer.Serialize(
            _formModel,
            new JsonSerializerOptions { PropertyNameCaseInsensitive = true, WriteIndented = true }
            );
    }

    public void Dispose()
    {
        if (_editContext is null)
            return;

        _editContext.OnValidationRequested -= HandleValidationRequested;
    }
}